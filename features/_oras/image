#!/usr/bin/env bash

set -Eeuxo pipefail

echo "Creating and puhsing OCI using oras.."

input_artifact=$1
output_artifact=$2
targetBaseDir=$(dirname "$output_artifact")
targetName="${input_artifact##*/}"
targetName="${targetName%.*}"

# extract rootfs temporarily to create oci artifact
targetBase="${input_artifact%.tar}"
rootfs=$targetBase
mkdir -p $rootfs
tar xf $input_artifact -C $rootfs

# copy kernel image, cmdline and initramfs
cp "$rootfs/boot/"vmlinuz* "$targetBase.vmlinuz"
cp "$rootfs/boot/"initrd* "$targetBase.initrd"
read -r _ cmdline < "$rootfs/etc/kernel/cmdline" 

# get the actual root fs
# if it's the empty default (#) we need to rewrite that
root_source=$(tail -n 1 "$rootfs/etc/fstab" | cut -d " " -f 1)
if [ $root_source = "#" ]; then
  root_source="LABEL=ROOT"
fi

cmdline="root=$root_source $cmdline"

# os-release
# TODO: check if os-release is now called release in the new builder?
osrelease=$(sed 's/$/\\n/g' $targetBase.release | tr -d "\n")
osrelease=$(echo $osrelease | sed 's/"//g')

echo "$(cat <<EOJ 
{
	"commandLine": "$cmdline",
	"os-release": "$osrelease"
}
EOJ
)" > $targetBase-oras-config.json

# tag
GARDENLINUX_VERSION=$(grep GARDENLINUX_VERSION $targetBase.release  | cut -d= -f2)


echo "oras push localhost:5000/oras-gardenlinux:$GARDENLINUX_VERSION $targetName.raw:application/vnd.onmetal.image.rootfs.v1alpha1.rootfs $targetName.vmlinuz:application/vnd.onmetal.image.vmlinuz.v1alpha1.vmlinuz $targetName.initrd:application/vnd.onmetal.image.initramfs.v1alpha1.initramfs --config $targetName.json:application/vnd.onmetal.image.config.v1alpha1+json"
