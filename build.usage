build [<OPTION>] <TARGET>;

<OPTION> ::= [--container-image=(localhost/builder|<IMAGES>)]                               "The default container image that is used."
           | [--container-engine=(docker| podman)]                                          "The software solution to implement a kernel namespace for the process." 
           | [--resolve-cname]                                                              "The platfrom, element or flag that should resolved for"
           | [--print-container-image]                                                      "Print the usaged container image."
           | [--kms]                                                                        "Set AWS environment variables to allow access to KMS." 
           | [--privileged]                                                                 "Set the container to have higher privileges." 
           | [--target <PATH> ]                                                             "The folder in which the artifices will be safed to." 
           ;

<TARGET> ::= <PLATFORM>[-<ELEMENT>]...[<FLAG>]...[-<ARCHITECTUR>-<TIME>];

<PLATFORM> ::= (ali
           |aws
           |azure
           |container
           |firecracker
           |gcp
           |gdch
           |kvm
           |metal
           |openstack
           |openstackbaremetal
           |vmware
           );

<ELEMENT> ::= (aide
           | base
           | chost
           | cis
           | cisAudit
           | cisModprobe
           | cisOS
           | cisPackages
           | cisPartition
           | cisSshd
           | cisSysctl
           | clamav
           | cloud
           | fedramp
           | firewall
           | gardener
           | khost
           | log
           | nodejs
           | python
           | rootlessPodman
           | sap
           | sapmachine
           | server
           | ssh
           | sssd
           | stig
           | stigDev
           | vhost
           );

<FLAG>  ::= (_boot
           |_build
           |_curl
           |_debug
           |_dev
           |_ignite
           |_iso
           |_lima
           |_nopkg
           |_oci
           |_oras
           |_persistence
           |_prod
           |_pxe
           |_readonly
           |_secureboot
           |_selinux
           |_slim
           );


<ARCHITECTUR> ::= (amd64|arm64);
<TIME> ::= (now|today|experimental)

#<PLATFORM@fish> ::= {{{ for feature in (ls -1 features);grep -E 'platform' features/$feature/info.yaml > /dev/null 2> /dev/null   && echo $feature;end  }}};
#<PLATFORM@bash> ::= {{{ for feature in $(ls -1 features);do grep -qE 'platform' features/$feature/info.yaml 2> /dev/null  && echo $feature;done }}};
<IMAGES> ::= {{{ podman images -q }}};

