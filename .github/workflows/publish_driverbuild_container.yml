name: publish gardenlinux driverbuild container
on:
  workflow_call:
    inputs:
      version:
        type: string
        default: now
jobs:
  publish_container:
    name: publish gardenlinux driverbuild container
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
      - uses: ./.github/actions/setup
      - name: set VERSION=${{ inputs.version }}
        run: |
          bin/garden-version "${{ inputs.version }}" | tee VERSION
          git update-index --assume-unchanged VERSION
      - name: get cname
        run: |
          cname_amd64="$(./build --resolve-cname driverbuild-amd64)"
          cname_arm64="$(./build --resolve-cname driverbuild-arm64)"
          echo "cname_amd64=$cname_amd64" | tee -a "$GITHUB_ENV"
          echo "cname_arm64=$cname_arm64" | tee -a "$GITHUB_ENV"
      - uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # pin@v3
        with:
          name: ${{ env.cname_amd64 }}
      - uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # pin@v3
        with:
          name: ${{ env.cname_arm64 }}
      - name: publish gardenlinux container base image
        run: |
          version=$(bin/garden-version "${{ inputs.version }}")
          podman login -u token -p ${{ github.token }} ghcr.io
          tar xzv < "${{ env.cname_amd64 }}.tar.gz"
          image="$(podman load < ${{ env.cname_amd64 }}.oci | awk '{ print $NF }')"

          # Tagging for amd64 nightly
          podman tag "$image" ghcr.io/${{ github.repository }}}/driver-build:amd64-nightly
          podman push ghcr.io/${{ github.repository }}}/driver-build:amd64-nightly

          # Tagging for amd64 with version
          podman tag "$image" ghcr.io/${{ github.repository }}}/driver-build:amd64-${version}
          podman push ghcr.io/${{ github.repository }}}/driver-build:amd64-${version}

          tar xzv < "${{ env.cname_arm64 }}.tar.gz"
          image="$(podman load < ${{ env.cname_arm64 }}.oci | awk '{ print $NF }')"

          # Tagging for arm64 nightly
          podman tag "$image" ghcr.io/${{ github.repository }}}/driver-build:arm64-nightly
          podman push ghcr.io/${{ github.repository }}}/driver-build:arm64-nightly

          # Tagging for arm64 with version
          podman tag "$image" ghcr.io/${{ github.repository }}}/driver-build:arm64-${version}
          podman push ghcr.io/${{ github.repository }}}/driver-build:arm64-${version}

          # Creating and pushing manifest for nightly
          podman manifest create ghcr.io/${{ github.repository }}/driver-build:nightly
          podman manifest add ghcr.io/${{ github.repository }}/driver-build:nightly ghcr.io/${{ github.repository }}/driver-build:amd64-nightly
          podman manifest add ghcr.io/${{ github.repository }}/driver-build:nightly ghcr.io/${{ github.repository }}/driver-build:arm64-nightly
          podman push ghcr.io/${{ github.repository }}/driver-build:nightly

          # Creating and pushing manifest for version tag
          podman manifest create ghcr.io/${{ github.repository }}}/driver-build:${version}
          podman manifest add ghcr.io/${{ github.repository }}}/driver-build:${version} ghcr.io/${{ github.repository }}}/driver-build:amd64-${version}
          podman manifest add ghcr.io/${{ github.repository }}}/driver-build:${version} ghcr.io/${{ github.repository }}}/driver-build:arm64-${version}
          podman push ghcr.io/${{ github.repository }}}/driver-build:${version}
